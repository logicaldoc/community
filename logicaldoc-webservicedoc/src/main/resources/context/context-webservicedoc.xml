<?xml version="1.0" encoding="UTF-8"?>
<beans default-autowire="no" default-lazy-init="false"
    xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:security="http://www.springframework.org/schema/security"
    xmlns:cxf="http://cxf.apache.org/core" xmlns:jaxws="http://cxf.apache.org/jaxws"
    xmlns:jaxrs="http://cxf.apache.org/jaxrs"
    xsi:schemaLocation="
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/util 
            http://www.springframework.org/schema/util/spring-util.xsd
            http://www.springframework.org/schema/context
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
            http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security.xsd
            http://cxf.apache.org/jaxws
            http://cxf.apache.org/schemas/jaxws.xsd
            http://cxf.apache.org/jaxrs
            http://cxf.apache.org/schemas/jaxrs.xsd">

    <!-- ############################## -->
    <!-- ###### JAX-RS (RESTful) ###### -->
    <!-- ############################## -->
    <!-- to support Java-to-JSON and vice-versa conversion -->
    
    <!-- JAXRS providers -->
    <bean id="jsonProvider" class="com.fasterxml.jackson.jakarta.rs.json.JacksonJsonProvider" />
    <bean id="multipartProvider" class="org.apache.cxf.jaxrs.provider.MultipartProvider" />
    <bean id="originFilter" class="demo.jaxrs.openapi.server.ApiOriginFilter" />
    
    <!-- CXF OpenApiFeature --> 
    <bean id="openApiFeature" class="org.apache.cxf.jaxrs.openapi.OpenApiFeature">
            <property name="title" value="LogicalDOC REST API"/>
            <property name="version" value="9.2"/>
            <property name="contactEmail" value="devel@logicaldoc.com"/>
            <property name="description" value="This is the interactive documentation of the REST APIs exposed by LogicalDOC. You can find more information about LogicalDOC at https://www.logicaldoc.com or on X @logicaldoc.&lt;br/&gt;   
            Note: The access path to the API is protected with basic authentication, to be able to run the samples you must log in using the credentials of a Logicaldoc user, or passing to the request the session ID (SID) as a cookie (cookie name: `ldoc-sid`).&lt;br/&gt;&lt;br/&gt;
            Here is an example to list the children folders: &lt;br/&gt;
            curl -u admin:admin -H ''Accept: application/json'' http://localhost:8080/services/rest/folder/listChildren?folderId=4
            &lt;br/&gt;&lt;br/&gt;
            More examples are available at the following address: http://wiki.logicaldoc.com/wiki/Bindings_And_Samples
            &lt;br/&gt;&lt;br/&gt;
            **Find out more about LogicalDOC** https://www.logicaldoc.com"/>                        
    </bean>

    <jaxrs:server id="restDocumentSWG" address="/rest/documentSWG">
        <!-- 
        <jaxrs:serviceBeans>
            <bean class="com.logicaldoc.webservice.rest.endpoint.RestDocumentService" />
        </jaxrs:serviceBeans>
        -->
        <jaxrs:serviceBeans>
            <bean class="com.logicaldoc.webservicedoc.RestDocumentSwagger" />
        </jaxrs:serviceBeans>        
       <jaxrs:providers>
            <ref bean="jsonProvider" />
            <ref bean="multipartProvider" />
            <ref bean="originFilter" />
        </jaxrs:providers>
        <jaxrs:features>
            <ref bean="openApiFeature" />
        </jaxrs:features>       
    </jaxrs:server>
        
    <jaxrs:server id="restFolderSWG" address="/rest/folderSWG">
        <!-- 
        <jaxrs:serviceBeans>
            <bean class="com.logicaldoc.webservice.rest.endpoint.RestFolderService" />
        </jaxrs:serviceBeans>
        -->
        <jaxrs:serviceBeans>
            <bean class="com.logicaldoc.webservicedoc.RestFolderSwagger" />
        </jaxrs:serviceBeans>        
        <jaxrs:providers>
            <ref bean="jsonProvider" />
            <ref bean="originFilter" />
        </jaxrs:providers>
        <jaxrs:features>
            <ref bean="openApiFeature" />
        </jaxrs:features>                
    </jaxrs:server>
    
    <jaxrs:server id="restSearchSWG" address="/rest/searchSWG">
        <jaxrs:serviceBeans>
            <bean class="com.logicaldoc.webservicedoc.RestSearchSwagger" />
        </jaxrs:serviceBeans>        
        <jaxrs:providers>
            <ref bean="jsonProvider" />
            <ref bean="originFilter" />
        </jaxrs:providers>
        <jaxrs:features>
            <ref bean="openApiFeature" />
        </jaxrs:features>              
    </jaxrs:server>
    
    <jaxrs:server id="restTagSWG" address="/rest/tagSWG">
        <jaxrs:serviceBeans>
            <bean class="com.logicaldoc.webservicedoc.RestTagSwagger" />
        </jaxrs:serviceBeans>        
        <jaxrs:providers>
            <ref bean="jsonProvider" />
            <ref bean="originFilter" />
        </jaxrs:providers>
        <jaxrs:features>
            <ref bean="openApiFeature" />
        </jaxrs:features>                
    </jaxrs:server>
    
    <jaxrs:server id="restBookmarkSWG" address="/rest/bookmarkSWG">
        <jaxrs:serviceBeans>
            <bean class="com.logicaldoc.webservicedoc.RestBookmarkSwagger" />
        </jaxrs:serviceBeans>        
        <jaxrs:providers>
            <ref bean="jsonProvider" />
            <ref bean="originFilter" />
        </jaxrs:providers>
        <jaxrs:features>
            <ref bean="openApiFeature" />
        </jaxrs:features>                
    </jaxrs:server>
    
    <jaxrs:server id="restSystemSWG" address="/rest/systemSWG">
        <jaxrs:serviceBeans>
            <bean class="com.logicaldoc.webservicedoc.RestSystemSwagger" />
        </jaxrs:serviceBeans>        
        <jaxrs:providers>
            <ref bean="jsonProvider" />
            <ref bean="originFilter" />
        </jaxrs:providers>
        <jaxrs:features>
            <ref bean="openApiFeature" />
        </jaxrs:features>               
    </jaxrs:server>
    
    <jaxrs:server id="restDocumentMetadataSWG" address="/rest/documentMetadataSWG">
        <jaxrs:serviceBeans>
            <bean class="com.logicaldoc.webservicedoc.RestDocumentMetadataSwagger" />
        </jaxrs:serviceBeans>        
        <jaxrs:providers>
            <ref bean="jsonProvider" />
            <ref bean="originFilter" />
        </jaxrs:providers>
        <jaxrs:features>
            <ref bean="openApiFeature" />
        </jaxrs:features>               
    </jaxrs:server>
    
    <jaxrs:server id="restAuthSWG" address="/rest/authSWG">
        <jaxrs:serviceBeans>
            <bean class="com.logicaldoc.webservicedoc.RestAuthSwagger" />
        </jaxrs:serviceBeans>        
        <jaxrs:providers>
            <ref bean="jsonProvider" />
            <ref bean="originFilter" />
        </jaxrs:providers>
        <jaxrs:features>
            <ref bean="openApiFeature" />
        </jaxrs:features>               
    </jaxrs:server>     
 	                               
</beans>